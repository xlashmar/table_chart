<?php

/**
 * @file
 * Table to chart module.
 */

/**
 * Implements hook_library().
 */
function table_chart_library() {
  $libraries['tabletochart'] = array(
    'title' => 'Table to Chart',
    'version' => '1.0',
    'js' => array(
      drupal_get_path('module', 'table_chart') . '/table_chart.js' => array(
        'scope' => 'footer',
      ),
    ),
    'dependencies' => array(
      // Require jQuery UI core by System module.
      array('table_chart', 'morrisjs'),
      // Require our other library.
      array('table_chart', 'tabletojson'),
    ),
  );
  // Raphael.
  $libraries['raphaeljs'] = array(
    'title' => 'Raphael',
    'version' => '2.2.1',
    'website' => 'http://dmitrybaranovskiy.github.io/raphael/',
    'js' => array(
      libraries_get_path('raphael') . '/raphael.min.js' => array(
        'scope' => 'footer',
      ),
    ),
  );
  // Morris.js.
  $libraries['morrisjs'] = array(
    'title' => 'Morris.js',
    'version' => '0.4.3',
    'website' => 'http://www.oesmith.co.uk/morris.js/',
    'js' => array(
      libraries_get_path('morrisjs') . '/morris.min.js' => array(
        'scope' => 'footer',
      ),
    ),
    'css' => array(
      libraries_get_path('morrisjs') . '/morris.css' => array(
        'type' => 'file',
      ),
    ),
    'dependencies' => array(
      // Require jQuery UI core by System module.
      array('table_chart', 'raphaeljs'),
      array('table_chart', 'tabletojson'),
    ),
  );
  // Chartist.js.
  $libraries['chartistjs'] = array(
    'title' => 'Chartist.js',
    'version' => '0.11.0',
    'website' => 'http://gionkunz.github.io/chartist-js/',
    'js' => array(
      libraries_get_path('chartistjs') . '/dist/chartist.min.js' => array(
        'scope' => 'footer',
      ),
    ),
    'css' => array(
      libraries_get_path('chartistjs') . '/chartist.css' => array(
        'type' => 'file',
      ),
    ),
    'dependencies' => array(
      // Require jQuery UI core by System module.
      //array('table_chart', 'raphaeljs'),
      // Require table_chart.js
      array('table_chart', 'tabletochart'),
      // Require Table to JSON
      array('table_chart', 'tabletojson'),
    ),
  );
  // Table to JSON.
  $libraries['tabletojson'] = array(
    'title' => 'Table to JSON',
    'website' => 'http://lightswitch05.github.io/table-to-json/',
    'version' => '0.6',
    'js' => array(
      libraries_get_path('tabletojson') . '/lib/jquery.tabletojson.min.js' => array(
        'scope' => 'footer',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_views_api().
 */
function table_chart_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'table_chart') . '/views',
  );
}

/**
 * Implements hook_views_pre_render().
 */
function table_chart_views_pre_render(&$view) {
  $options = $view->display_handler->options;
  if (isset($options['charting_library'])) {
    $charting_library = $options['charting_library'];

    //drupal_add_library('table_chart', $charting_library);
    //$view['#attached']['library'][] = 'table_chart/tabletochart';
    //$view['#attached']['library'][] = 'table_chart/' . $charting_library;
  }

  /*
  // Get the views extenders to see if the table_chart extension exist.
  $extender = $view->display_handler->getExtenders();
  if (isset($extender['table_chart']->options['charting_library'])) {
    $charting_library = $extender['table_chart']-data>options['charting_library'];

    // Attached the libraries needed for that charing library.
    $view->element['#attached']['library'][] = 'table_chart/tabletochart';
    $view->element['#attached']['library'][] = 'table_chart/' . $charting_library;
  }
  */
}

/**
 * Implements hook_preprocess_views_view_table().
 */
function table_chart_preprocess_views_view_table(&$vars) {
  if (!empty($vars['view'])) {

    // Get the custom attributes.
    $attributes = $vars['view']->display_handler->get_option('attributes');
    $attributes = table_chart_attributes_keyed_array($attributes);

    // Get all the other options.
    $options = $vars['view']->display_handler->options;

    if (isset($options['charting_library'])) {
      $charting_library = $options['charting_library'];
      // Add selected chart library.
      drupal_add_library('table_chart', $charting_library);
      drupal_add_js(drupal_get_path('module', 'table_chart') . '/table_chart.js', array('group' => JS_LIBRARY, 'weight' => -1));
    }
    
    // Set the data attribute to the selected charting library for this chart.
    if (isset($options['charting_library'])) {
      $attributes['data-charting-library'] = $options['charting_library'];
    }
    
    // Add all the attributes.
    if (!empty($attributes)) {
      $vars['attributes_array'] = $vars['attributes_array'] + $attributes;
    }

  }
}

/**
 * Implements hook_views_aggregator_results_table().
 */
function table_chart_preprocess_views_aggregator_results_table(&$vars) {
  table_chart_preprocess_views_view_table($vars);
}

/**
 * Convert the attributes string into an array compatible with drupal_attributes.
 *
 * @param string $attributes
 *   String settings for the attributes.
 *
 * @return array
 *   Returns the array of valid attributes.
 */
function table_chart_attributes_keyed_array($attributes) {
  $tmp = explode("\n", $attributes);
  $tmp = array_filter($tmp, 'trim');

  $keyed_attributes = array();
  foreach ($tmp as $attribute) {
    parse_str($attribute, $array);
    if (is_array($array)) {
      foreach ($array as $key => $value) {
        $keyed_attributes['data-' . $key] = $value;
      }
    }
  }

  return $keyed_attributes;
}
